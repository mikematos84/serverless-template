service: ${file(env.yml):service} # NOTE: update this with your service name

# Custom variables
custom:
  env: ${file(env.yml):file(env.yml):stage, file(env.yml):default}
  stage: ${opt:stage, file(env.yml):stage}
  region: ${opt:region, file(env.yml):region}
  gw_rest_api_id:
    Fn::Join:
      - ""
      - - Ref: ApiGatewayRestApi
  gw_url:
    Fn::Join:
      - ""
      - - "https://"
        - Ref: ApiGatewayRestApi
        - ".execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}"
  s3:
    bucket:
      default: ${self:custom.stage}-${self:service}-default
  dynamodb:
    table:
      default: ${self:custom.stage}-${self:service}-default

# Provider
provider:
  name: aws
  runtime: nodejs10.x
  profile: default # uses your default .aws profile
  stage: ${self:custom.stage}
  region: ${self:custom.region}

  # Environment Variables
  environment:
    STAGE: ${self:custom.stage}
    GW_REST_API_ID: ${self:custom.gw_rest_api_id}
    GW_URL: ${self:custom.gw_url}
    DEFAULT_TABLE: ${self:custom.dynamodb.table.default}

  # Policies
  iamRoleStatements:
    # S3 Bucket
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource:
        - Fn::Join:
            - ""
            - - "arn:aws:s3:::${self:custom.s3.bucket.default}"
        - Fn::Join:
            - ""
            - - "arn:aws:s3:::${self:custom.s3.bucket.default}/*"
    # DynamoDB
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::Join:
            - ""
            - - "arn:aws:dynamodb:${self:custom.region}:"
              - Ref: AWS::AccountId
              - ":table/${self:custom.dynamodb.table.default}"
        - Fn::Join:
            - ""
            - - "arn:aws:dynamodb:${self:custom.region}:"
              - Ref: AWS::AccountId
              - ":table/${self:custom.dynamodb.table.default}/*"

resources:
  Resources:
    # S3 Buckets
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3.bucket.default}
    #DynamoDB Tables
    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Delete
      Properties:
        TableName: ${self:custom.dynamodb.table.default}
        AttributeDefinitions:
          - AttributeName: USER_ID
            AttributeType: N
        KeySchema:
          - AttributeName: USER_ID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

package:
  include:
    - include-me.js
    - include-me-dir/**
  exclude:
    - exclude-me.js
    - exclude-me-dir/**

functions:
  hello:
    handler: api/hello/hello.handler
    events:
      - http:
          method: get
          path: api/hello/{id}
